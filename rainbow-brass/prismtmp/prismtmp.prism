// Generated with BRASS Robot Map PRISM Renderer

mdp

const ET=0;
const RT=1;

global turn:[ET..RT] init ET;



// Map location constants

const INITIAL_LOCATION;
const TARGET_LOCATION;

formula goal = l=TARGET_LOCATION;

formula stop = goal | b<10;

const l1=0;
const newnode=9;
const l2=1;
const l3=2;
const ls=8;
const l4=3;
const l5=4;
const l6=5;
const l7=6;
const l8=7;


// Environment process

module env_module
end:bool init false;

	[] true & (turn=ET) & (!stop)->  (turn'=RT);
	[] stop  & !end -> (end'=true);
endmodule


// Robot process

const INITIAL_BATTERY;
const HALF_SPEED=0;
const FULL_SPEED=1;

formula b_upd_l2_l3= s=HALF_SPEED? max(0,b-661) : max(0,b-848);
formula b_upd_l3_l2= s=HALF_SPEED? max(0,b-661) : max(0,b-848);
formula b_upd_l3_l4= s=HALF_SPEED? max(0,b-448) : max(0,b-697);
formula b_upd_l4_l3= s=HALF_SPEED? max(0,b-448) : max(0,b-697);
formula b_upd_l2_l8= s=HALF_SPEED? max(0,b-355) : max(0,b-630);
formula b_upd_l8_l2= s=HALF_SPEED? max(0,b-355) : max(0,b-630);
formula b_upd_l8_l7= s=HALF_SPEED? max(0,b-390) : max(0,b-656);
formula b_upd_l7_l8= s=HALF_SPEED? max(0,b-390) : max(0,b-656);
formula b_upd_l7_l6= s=HALF_SPEED? max(0,b-661) : max(0,b-848);
formula b_upd_l6_l7= s=HALF_SPEED? max(0,b-661) : max(0,b-848);
formula b_upd_l3_l6= s=HALF_SPEED? max(0,b-457) : max(0,b-703);
formula b_upd_l6_l3= s=HALF_SPEED? max(0,b-337) : max(0,b-618);
formula b_upd_l4_l5= s=HALF_SPEED? max(0,b-457) : max(0,b-703);
formula b_upd_l5_l4= s=HALF_SPEED? max(0,b-457) : max(0,b-703);
formula b_upd_l6_l5= s=HALF_SPEED? max(0,b-448) : max(0,b-697);
formula b_upd_l5_l6= s=HALF_SPEED? max(0,b-448) : max(0,b-697);
formula b_upd_l4_ls= s=HALF_SPEED? max(0,b-377) : max(0,b-646);
formula b_upd_ls_l4= s=HALF_SPEED? max(0,b-377) : max(0,b-646);
formula b_upd_l1_newnode= s=HALF_SPEED? max(0,b-329) : max(0,b-612);
formula b_upd_newnode_l1= s=HALF_SPEED? max(0,b-329) : max(0,b-612);

module bot_module
b:[0..32560] init INITIAL_BATTERY;
l:[0..10] init INITIAL_LOCATION;
s:[HALF_SPEED..FULL_SPEED] init HALF_SPEED;
robot_done:bool init false;
	[] true & (turn=RT) & (!stop) & (robot_done) -> (robot_done'=false) & (turn'=ET);

	 [l2_to_l3] (l=l2) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_l2_l3) & (robot_done'=true);
	 [l3_to_l2] (l=l3) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_l3_l2) & (robot_done'=true);
	 [l3_to_l4] (l=l3) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_l3_l4) & (robot_done'=true);
	 [l4_to_l3] (l=l4) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_l4_l3) & (robot_done'=true);
	 [l2_to_l8] (l=l2) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l8)  & (b'=b_upd_l2_l8) & (robot_done'=true);
	 [l8_to_l2] (l=l8) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l2)  & (b'=b_upd_l8_l2) & (robot_done'=true);
	 [l8_to_l7] (l=l8) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l7)  & (b'=b_upd_l8_l7) & (robot_done'=true);
	 [l7_to_l8] (l=l7) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l8)  & (b'=b_upd_l7_l8) & (robot_done'=true);
	 [l7_to_l6] (l=l7) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_l7_l6) & (robot_done'=true);
	 [l6_to_l7] (l=l6) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l7)  & (b'=b_upd_l6_l7) & (robot_done'=true);
	 [l3_to_l6] (l=l3) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_l3_l6) & (robot_done'=true);
	 [l6_to_l3] (l=l6) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l3)  & (b'=b_upd_l6_l3) & (robot_done'=true);
	 [l4_to_l5] (l=l4) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l5)  & (b'=b_upd_l4_l5) & (robot_done'=true);
	 [l5_to_l4] (l=l5) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_l5_l4) & (robot_done'=true);
	 [l6_to_l5] (l=l6) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l5)  & (b'=b_upd_l6_l5) & (robot_done'=true);
	 [l5_to_l6] (l=l5) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l6)  & (b'=b_upd_l5_l6) & (robot_done'=true);
	 [l4_to_ls] (l=l4) & (!stop) & (turn=RT) & (!robot_done) -> (l'=ls)  & (b'=b_upd_l4_ls) & (robot_done'=true);
	 [ls_to_l4] (l=ls) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l4)  & (b'=b_upd_ls_l4) & (robot_done'=true);
	 [l1_to_newnode] (l=l1) & (!stop) & (turn=RT) & (!robot_done) -> (l'=newnode)  & (b'=b_upd_l1_newnode) & (robot_done'=true);
	 [newnode_to_l1] (l=newnode) & (!stop) & (turn=RT) & (!robot_done) -> (l'=l1)  & (b'=b_upd_newnode_l1) & (robot_done'=true);

endmodule


rewards "time"
	[l2_to_l3] true :s=HALF_SPEED? 64.4914 : 33.1941;
	[l3_to_l2] true :s=HALF_SPEED? 64.4914 : 33.1941;
	[l3_to_l4] true :s=HALF_SPEED? 27.7714 : 14.2941;
	[l4_to_l3] true :s=HALF_SPEED? 27.7714 : 14.2941;
	[l2_to_l8] true :s=HALF_SPEED? 11.5714 : 5.9559;
	[l8_to_l2] true :s=HALF_SPEED? 11.5714 : 5.9559;
	[l8_to_l7] true :s=HALF_SPEED? 17.7429 : 9.1324;
	[l7_to_l8] true :s=HALF_SPEED? 17.7429 : 9.1324;
	[l7_to_l6] true :s=HALF_SPEED? 64.4914 : 33.1941;
	[l6_to_l7] true :s=HALF_SPEED? 64.4914 : 33.1941;
	[l3_to_l6] true :s=HALF_SPEED? 29.3143 : 15.0882;
	[l6_to_l3] true :s=HALF_SPEED? 8.5714 : 4.4118;
	[l4_to_l5] true :s=HALF_SPEED? 29.3143 : 15.0882;
	[l5_to_l4] true :s=HALF_SPEED? 29.3143 : 15.0882;
	[l6_to_l5] true :s=HALF_SPEED? 27.7714 : 14.2941;
	[l5_to_l6] true :s=HALF_SPEED? 27.7714 : 14.2941;
	[l4_to_ls] true :s=HALF_SPEED? 15.4286 : 7.9412;
	[ls_to_l4] true :s=HALF_SPEED? 15.4286 : 7.9412;
	[l1_to_newnode] true :s=HALF_SPEED? 7.2171 : 3.7147;
	[newnode_to_l1] true :s=HALF_SPEED? 7.2171 : 3.7147;
endrewards


rewards "distance"
	stop & TARGET_LOCATION=l1 : l=newnode ? 2.5260 : l=l2 ? 9999.0000 : l=l3 ? 9999.0000 : l=ls ? 9999.0000 : l=l4 ? 9999.0000 : l=l5 ? 9999.0000 : l=l6 ? 9999.0000 : l=l7 ? 9999.0000 : l=l8 ? 9999.0000 :  0;
	stop & TARGET_LOCATION=newnode : l=l1 ? 2.5260 : l=l2 ? 9999.0000 : l=l3 ? 9999.0000 : l=ls ? 9999.0000 : l=l4 ? 9999.0000 : l=l5 ? 9999.0000 : l=l6 ? 9999.0000 : l=l7 ? 9999.0000 : l=l8 ? 9999.0000 :  0;
	stop & TARGET_LOCATION=l2 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l3 ? 22.5720 : l=ls ? 37.6920 : l=l4 ? 32.2920 : l=l5 ? 42.5520 : l=l6 ? 32.8320 : l=l7 ? 10.2600 : l=l8 ? 4.0500 :  0;
	stop & TARGET_LOCATION=l3 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 22.5720 : l=ls ? 15.1200 : l=l4 ? 9.7200 : l=l5 ? 19.9800 : l=l6 ? 10.2600 : l=l7 ? 32.8320 : l=l8 ? 26.6220 :  0;
	stop & TARGET_LOCATION=ls : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 37.6920 : l=l3 ? 15.1200 : l=l4 ? 5.4000 : l=l5 ? 15.6600 : l=l6 ? 25.3800 : l=l7 ? 47.9520 : l=l8 ? 41.7420 :  0;
	stop & TARGET_LOCATION=l4 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 32.2920 : l=l3 ? 9.7200 : l=ls ? 5.4000 : l=l5 ? 10.2600 : l=l6 ? 19.9800 : l=l7 ? 42.5520 : l=l8 ? 36.3420 :  0;
	stop & TARGET_LOCATION=l5 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 42.5520 : l=l3 ? 19.9800 : l=ls ? 15.6600 : l=l4 ? 10.2600 : l=l6 ? 9.7200 : l=l7 ? 32.2920 : l=l8 ? 38.5020 :  0;
	stop & TARGET_LOCATION=l6 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 32.8320 : l=l3 ? 10.2600 : l=ls ? 25.3800 : l=l4 ? 19.9800 : l=l5 ? 9.7200 : l=l7 ? 22.5720 : l=l8 ? 28.7820 :  0;
	stop & TARGET_LOCATION=l7 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 10.2600 : l=l3 ? 32.8320 : l=ls ? 47.9520 : l=l4 ? 42.5520 : l=l5 ? 32.2920 : l=l6 ? 22.5720 : l=l8 ? 6.2100 :  0;
	stop & TARGET_LOCATION=l8 : l=l1 ? 9999.0000 : l=newnode ? 9999.0000 : l=l2 ? 4.0500 : l=l3 ? 26.6220 : l=ls ? 41.7420 : l=l4 ? 36.3420 : l=l5 ? 38.5020 : l=l6 ? 28.7820 : l=l7 ? 6.2100 :  0;
endrewards


// --- End of generated code ---
